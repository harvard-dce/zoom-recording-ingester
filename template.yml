AWSTemplateFormatVersion : '2010-09-09'
Description: Zoom to Opencast video ingester

Parameters:
  WebhookLambdaCode:
    Type: String
  ZoomDownloaderLambdaCode:
    Type: String
  NotificationEmail:
    Type: String
  ZoomApiKey:
    Type: String
  ZoomApiSecret:
    Type: String
  ZoomLoginUser:
    Type: String
  ZoomLoginPassword:
    Type: String

Resources:

  ZoomVideosBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-recording-files"
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfterTwoWeeks
            Prefix: ""
            Status: Enabled
            ExpirationInDays: 14

  ZoomIngesterUploadQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-uploads.fifo"
      FifoQueue: true
      MessageRetentionPeriod: 1209600 # 14 days

  ZoomIngesterRecordingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-recordings"
      KeySchema:
        - AttributeName: meeting_uuid
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: meeting_uuid
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  ZoomIngesterRole:
    Type: AWS::IAM::Role
    DependsOn: ZoomIngesterRecordingsTable
    Properties:
      RoleName: !Sub "${AWS::StackName}-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:*"
                  - "lambda:*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "dynamodb:*"
                Resource: !GetAtt [ZoomIngesterRecordingsTable, Arn]
              - Effect: "Allow"
                Action:
                  - "dynamodb:DescribeStream"
                  - "dynamodb:GetRecords"
                  - "dynamodb:GetShardIterator"
                  - "dynamodb:ListStreams"
                Resource: !Join ['', [!GetAtt [ZoomIngesterRecordingsTable, Arn], "/stream/*"]]
              - Effect: "Allow"
                Action:
                  - "s3:*"
                Resource: !Join ['', [!GetAtt [ZoomVideosBucket, Arn], "/*"]]

  ZoomIngesterApi:
    Type: AWS::ApiGateway::RestApi
    DependsOn: ZoomIngesterRecordingsTable
    Properties:
      Name: !Ref AWS::StackName

  ZoomIngesterResource:
    Type: AWS::ApiGateway::Resource
    DependsOn: ZoomIngesterApi
    Properties:
      RestApiId: !Ref ZoomIngesterApi
      ParentId: !GetAtt [ZoomIngesterApi, RootResourceId]
      PathPart: "new_recording"

  ZoomIngesterWebhook:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - ZoomIngesterApi
      - ZoomIngesterWebhookFunction
    Properties:
      RestApiId:
        Ref: ZoomIngesterApi
      ResourceId:
        Ref: ZoomIngesterResource
      HttpMethod: POST
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.type: false
        method.request.querystring.content: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Credentials: !GetAtt [ZoomIngesterRole, Arn]
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ZoomIngesterWebhookFunction.Arn}/invocations
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 200

  ZoomIngesterWebhookFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: zoom-webhook.handler
      Runtime: python3.6
      Timeout: 30
      Role: !GetAtt [ZoomIngesterRole, Arn]
      FunctionName: !Sub "${AWS::StackName}-zoom-webhook-function"
      Environment:
        Variables:
          DOWNLOAD_URLS_TABLE: !Ref ZoomIngesterRecordingsTable
          ZOOM_API_KEY: !Ref ZoomApiKey
          ZOOM_API_SECRET: !Ref ZoomApiSecret
      Code:
        S3Bucket: !Select [0, !Split ["/", !Ref WebhookLambdaCode]]
        S3Key: !Select [1, !Split ["/", !Ref WebhookLambdaCode]]

  ZoomIngesterDeploy:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ZoomIngesterApi
      - ZoomIngesterResource
      - ZoomIngesterWebhook
    Properties:
      RestApiId: !Ref ZoomIngesterApi
      Description: "Deployment for the zoom ingester api"
      StageName: "testing"

  ZoomIngesterStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ZoomIngesterDeploy
      RestApiId: !Ref ZoomIngesterApi
      StageName: "latest"
      MethodSettings:
        - DataTraceEnabled: true
          MetricsEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: "/*"

  ZoomIngesterApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Enabled: true
      StageKeys:
        - RestApiId: !Ref ZoomIngesterApi
          StageName: !Ref ZoomIngesterStage

  ZoomDownloaderFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - ZoomIngesterRecordingsTable
      - ZoomIngesterUploadQueue
    Properties:
      Handler: zoom-downloader.handler
      Runtime: python3.6
      MemorySize: 512
      Timeout: 300
      Role: !GetAtt [ZoomIngesterRole, Arn]
      FunctionName: !Sub "${AWS::StackName}-zoom-downloader-function"
      Environment:
        Variables:
          ZOOM_VIDEOS_BUCKET: !Sub "${AWS::StackName}-videos"
          ZOOM_LOGIN_USER: !Ref ZoomLoginUser
          ZOOM_LOGIN_PASSWORD: !Ref ZoomLoginPassword
          UPLOAD_QUEUE_NAME: !GetAtt [ZoomIngesterUploadQueue, QueueName]
      Code:
        S3Bucket: !Select [0, !Split ["/", !Ref ZoomDownloaderLambdaCode]]
        S3Key: !Select [1, !Split ["/", !Ref ZoomDownloaderLambdaCode]]

  ZoomDownloaderEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    DependsOn:
      - ZoomIngesterRecordingsTable
      - ZoomDownloaderFunction
    Properties:
      Enabled: true
      BatchSize: 1
      FunctionName: !GetAtt [ZoomDownloaderFunction, Arn]
      StartingPosition: TRIM_HORIZON
      EventSourceArn: !GetAtt [ZoomIngesterRecordingsTable, StreamArn]

  ZoomIngesterNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${AWS::StackName}-notification-topic"
      Subscription:
        - Protocol: email
          Endpoint: !Ref NotificationEmail

  ZoomWebhookErrorsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "alarms on any webhook function invocation error"
      AlarmActions:
        - !Ref ZoomIngesterNotificationTopic
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref ZoomIngesterWebhookFunction
      Namespace: AWS/Lambda
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      Statistic: Sum

  ZoomWebhook4xxMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "alarms on any webhook function 4xx response"
      AlarmActions:
        - !Ref ZoomIngesterNotificationTopic
      MetricName: 4XXError
      Dimensions:
        - Name: ApiName
          Value: !Ref AWS::StackName
        - Name: Stage
          Value: "latest"
      Namespace: AWS/ApiGateway
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      Statistic: Sum

  ZoomWebhook5xxMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "alarms on any webhook function 5xx response"
      AlarmActions:
        - !Ref ZoomIngesterNotificationTopic
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Ref AWS::StackName
        - Name: Stage
          Value: "latest"
      Namespace: AWS/ApiGateway
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      Statistic: Sum

  ZoomWebhookLatencyMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "alarms if the webhook method latency gets too high"
      AlarmActions:
        - !Ref ZoomIngesterNotificationTopic
      MetricName: Latency
      Dimensions:
        - Name: ApiName
          Value: !Ref AWS::StackName
        - Name: Stage
          Value: "latest"
      Namespace: AWS/ApiGateway
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Period: 60
      EvaluationPeriods: 3
      Threshold: 10000
      Statistic: Average

  ZoomDownloaderErrorsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "alarms on any downloader function invocation error"
      AlarmActions:
        - !Ref ZoomIngesterNotificationTopic
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref ZoomDownloaderFunction
      Namespace: AWS/Lambda
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      Statistic: Sum

  ZoomDownloaderInvocationsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "alarms in the absence of new downloads in past 24hrs"
      AlarmActions:
        - !Ref ZoomIngesterNotificationTopic
      MetricName: Invocations
      Dimensions:
        - Name: FunctionName
          Value: !Ref ZoomDownloaderFunction
      Namespace: AWS/Lambda
      ComparisonOperator: LessThanThreshold
      Period: 86400
      EvaluationPeriods: 1
      Threshold: 1
      Statistic: Sum

  ZoomUploadQueueDepthMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "alarm if too many pending uploads build up in queue"
      AlarmActions:
        - !Ref ZoomIngesterNotificationTopic
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !GetAtt [ZoomIngesterUploadQueue, QueueName]
      Namespace: AWS/SQS
      Statistic: Sum
      Period: 300
      Threshold: 40
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      InsufficientDataActions:
        - !Ref ZoomIngesterNotificationTopic
