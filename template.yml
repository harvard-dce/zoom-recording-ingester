AWSTemplateFormatVersion : '2010-09-09'
Description: Zoom to Opencast video ingester

Parameters:
  WebhookLambdaCode:
    Type: String
  ZoomDownloaderLambdaCode:
    Type: String

Resources:

  ZoomVideosBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-videos"

  DownloadUrlsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-urls"
      KeySchema:
        - AttributeName: DownloadUrl
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: DownloadUrl
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  DownloadUrlsRole:
    Type: AWS::IAM::Role
    DependsOn: DownloadUrlsTable
    Properties:
      RoleName: !Sub "${AWS::StackName}-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:*"
                  - "lambda:*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "dynamodb:*"
                Resource: !GetAtt [DownloadUrlsTable, Arn]
              - Effect: "Allow"
                Action:
                  - "s3:*"
                Resource: !Join ['', [!GetAtt [ZoomVideosBucket, Arn], "/*"]]

  DownloadUrlsApi:
    Type: AWS::ApiGateway::RestApi
    DependsOn: DownloadUrlsTable
    Properties:
      Name: !Ref AWS::StackName

  DownloadUrlsResource:
    Type: AWS::ApiGateway::Resource
    DependsOn: DownloadUrlsApi
    Properties:
      RestApiId: !Ref DownloadUrlsApi
      ParentId: !GetAtt [DownloadUrlsApi, RootResourceId]
      PathPart: "download_url"

  DownloadUrlPut:
    Type: AWS::ApiGateway::Method
    DependsOn: DownloadUrlsApi
    Properties:
      ApiKeyRequired: true
      RestApiId:
        Ref: DownloadUrlsApi
      ResourceId:
        Ref: DownloadUrlsResource
      HttpMethod: PUT
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Credentials: !GetAtt [DownloadUrlsRole, Arn]
        Type: AWS
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:dynamodb:action/PutItem"
        RequestTemplates:
          application/json:
            !Sub |
              {
                "TableName": "${AWS::StackName}-urls",
                "Item": {
                  "DownloadUrl": { "S": "$input.path('$.download_url')" },
                  "Duration": { "N": "$input.path('$.duration')" },
                  "MeetingSeriesId": { "N": "$input.path('$.meeting_series_id')" },
                  "MeetingUUID": { "S": "$input.path('$.meeting_uuid')" },
                  "RecordingStart": { "S": "$input.path('$.recording_start')" },
                  "RecordingEnd": { "S": "$input.path('$.recording_end')" },
                  "Topic": { "S": "$input.path('$.topic')" }
                }
              }
        IntegrationResponses:
          - StatusCode: 200
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 200

  DownloadUrlWebhook:
    Type: AWS::ApiGateway::Method
    DependsOn: DownloadUrlsApi
    Properties:
      RestApiId:
        Ref: DownloadUrlsApi
      ResourceId:
        Ref: DownloadUrlsResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Credentials: !GetAtt [DownloadUrlsRole, Arn]
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DownloadUrlWebhookFunction.Arn}/invocations
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 200

  DownloadUrlWebhookFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: zoom-webhook.handler
      Runtime: python3.6
      Role: !GetAtt [DownloadUrlsRole, Arn]
      FunctionName: !Sub "${AWS::StackName}-zoom-webhook-function"
      Environment:
        Variables:
          DOWNLOAD_URLS_TABLE: !Sub "${AWS::StackName}-urls"
          ZOOM_API_KEY: ""
          ZOOM_API_SECRET: ""
      Code:
        S3Bucket: !Select [0, !Split ["/", !Ref WebhookLambdaCode]]
        S3Key: !Select [1, !Split ["/", !Ref WebhookLambdaCode]]

  DownloadUrlDeploy:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - DownloadUrlsApi
      - DownloadUrlsResource
      - DownloadUrlPut
      - DownloadUrlWebhook
    Properties:
      RestApiId: !Ref DownloadUrlsApi
      Description: "Deployment for the download urls api"
      StageName: "testing"

  DownloadUrlsStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref DownloadUrlDeploy
      RestApiId: !Ref DownloadUrlsApi
      StageName: "latest"
      MethodSettings:
        - DataTraceEnabled: true
          MetricsEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: "/*"

  DownloadUrlsAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt [DownloadUrlsRole, Arn]

  DownloadUrlsApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Enabled: true
      StageKeys:
        - RestApiId: !Ref DownloadUrlsApi
          StageName: !Ref DownloadUrlsStage

  ZoomDownloaderFunction:
    Type: AWS::Lambda::Function
    DependsOn: DownloadUrlsTable
    Properties:
      Handler: zoom-downloader.handler
      Runtime: python3.6
      Role: !GetAtt [DownloadUrlsRole, Arn]
      FunctionName: !Sub "${AWS::StackName}-zoom-downloader-function"
      Environment:
        Variables:
          ZOOM_VIDEOS_BUCKET: !Sub "${AWS::StackName}-videos"
      Code:
        S3Bucket: !Select [0, !Split ["/", !Ref ZoomDownloaderLambdaCode]]
        S3Key: !Select [1, !Split ["/", !Ref ZoomDownloaderLambdaCode]]

  ZoomDownloaderEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    DependsOn:
      - DownloadUrlsTable
      - ZoomDownloaderFunction
    Properties:
      FunctionName: !GetAtt [ZoomDownloaderFunction, Arn]
      StartingPosition: TRIM_HORIZON
      EventSourceArn: !GetAtt [DownloadUrlsTable, StreamArn]
